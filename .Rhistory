ggplot2::theme_set(ggpubr::theme_pubr(base_size=10))
knitr::opts_chunk$set(dev = c('png', 'cairo_pdf'),
fig.align = 'center', fig.height = 5, fig.width = 8.5,
pdf.options(encoding = "ISOLatin9.enc"),
fig.path='integration/figures/', warning=FALSE, message=FALSE)
library(librarian)
librarian::shelf(dplyr, stringr,
Seurat, SeuratDisk, clusterProfiler,
ggplot2, gridExtra, cowplot)
urlhead <- 'https://ftp.ncbi.nlm.nih.gov/geo/series/GSE120nnn/GSE120537/suppl/'
if(!dir.exists(file.path(getwd(), 'integration', 'input'))) {
dir.create(file.path(getwd(), 'integration', 'input'), recursive = TRUE) }
if(!file.exists(file.path(getwd(), 'integration', 'input', 'GSE120537_counts.csv.gz'))) {
download.file(paste0(urlhead, 'GSE120537_counts.csv.gz'),
file.path(getwd(), 'integration', 'input', 'GSE120537_counts.csv.gz')) }
if(!file.exists(file.path(getwd(), 'integration', 'input', 'GSE120537_metadata-code-book.md.txt.gz'))) {
download.file(paste0(urlhead, 'GSE120537_metadata-code-book.md.txt.gz'),
file.path(getwd(), 'integration', 'input', 'GSE120537_metadata-code-book.md.txt.gz')) }
if(!file.exists(file.path(getwd(), 'integration', 'input', 'GSE120537_metadata.csv.gz'))) {
download.file(paste0(urlhead, 'GSE120537_metadata.csv.gz'),
file.path(getwd(), 'integration', 'input', 'GSE120537_metadata.csv.gz')) }
# (assumes I might need to run this multiple times)
if (file.exists('GSE120537_counts.rds')) {
GSE120537_counts <- readRDS('GSE120537_counts.rds')
} else {
GSE120537_counts <- read.csv(gzfile(file.path(getwd(), 'integration', 'input', 'GSE120537_counts.csv.gz')),
header = TRUE, row.names = 1)
saveRDS(GSE120537_counts, file='GSE120537_counts.rds', compress=TRUE)
}
if (file.exists('GSE120537_metadata.rds')) {
GSE120537_md <- readRDS('GSE120537_metadata.rds')
} else {
GSE120537_md <- read.csv(gzfile(file.path(getwd(), 'integration', 'input', 'GSE120537_metadata.csv.gz')),
header = TRUE, row.names = 1)
saveRDS(GSE120537_md, file='GSE120537_metadata.rds', compress=TRUE)
}
# identify genes by symbol
id2sym <- read.csv(file.path(getwd(), 'resources', 'tx2gs.csv'),
col.names=c("gene", "symbol", "transcript")) %>%
dplyr::select(-transcript) %>%
unique()
rownames(GSE120537_counts) = id2sym$symbol[match(rownames(GSE120537_counts), id2sym$gene)]
# align the cell ID patterns hbc02123.TATGCAGT.TGTTATCA.TGCTCCGT -> hbc02123-TATGCAGT:TGTTATCA-TGCTCCGT
# after https://stackoverflow.com/questions/43077846
names(GSE120537_counts) <- sub("\\.(.*?)\\.(.*?)\\.", "-\\1:\\2-", names(GSE120537_counts))
data1 <- CreateSeuratObject(counts = GSE120537_counts,
meta.data = GSE120537_md)
data1 <- SCTransform(data1, vars.to.regress = "pctMito", verbose = FALSE)
data1 <- RunPCA(data1, verbose = FALSE)
data1 <- RunUMAP(data1, dims = 1:30, verbose = FALSE)
DimPlot(data1, group.by = "technology")
